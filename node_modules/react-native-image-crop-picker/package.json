{
  "_args": [
    [
      {
        "raw": "react-native-image-crop-picker@^0.14.1",
        "scope": null,
        "escapedName": "react-native-image-crop-picker",
        "name": "react-native-image-crop-picker",
        "rawSpec": "^0.14.1",
        "spec": ">=0.14.1 <0.15.0",
        "type": "range"
      },
      "/Users/edmund/Desktop/hello-world"
    ]
  ],
  "_from": "react-native-image-crop-picker@>=0.14.1 <0.15.0",
  "_id": "react-native-image-crop-picker@0.14.4",
  "_inCache": true,
  "_location": "/react-native-image-crop-picker",
  "_nodeVersion": "8.1.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-image-crop-picker-0.14.4.tgz_1501512285257_0.6907791618723422"
  },
  "_npmUser": {
    "name": "ivpusic",
    "email": "pusic007@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-image-crop-picker@^0.14.1",
    "scope": null,
    "escapedName": "react-native-image-crop-picker",
    "name": "react-native-image-crop-picker",
    "rawSpec": "^0.14.1",
    "spec": ">=0.14.1 <0.15.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-image-crop-picker/-/react-native-image-crop-picker-0.14.4.tgz",
  "_shasum": "3b5c9f9e933ab367c61cf33b46df623f52943e83",
  "_shrinkwrap": null,
  "_spec": "react-native-image-crop-picker@^0.14.1",
  "_where": "/Users/edmund/Desktop/hello-world",
  "author": {
    "name": "Ivan Pusic"
  },
  "bugs": {
    "url": "https://github.com/ivpusic/react-native-image-crop-picker/issues"
  },
  "dependencies": {},
  "description": "Select single or multiple images, with cropping option",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-PHEYVEWPY5rfElQtjMbHlhg0xTqOW9NYE6tD035Ulgc68GwIx6GzIeX3+rB1feCl1UNDwu4mLy/osYzSc6yGWA==",
    "shasum": "3b5c9f9e933ab367c61cf33b46df623f52943e83",
    "tarball": "https://registry.npmjs.org/react-native-image-crop-picker/-/react-native-image-crop-picker-0.14.4.tgz"
  },
  "gitHead": "da7a89098b389dc06bc1e75310b22a339b09147a",
  "homepage": "https://github.com/ivpusic/react-native-image-crop-picker#readme",
  "keywords": [
    "react",
    "native",
    "react-native",
    "image",
    "picker",
    "crop",
    "cropping",
    "multiple",
    "camera"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ivpusic",
      "email": "pusic007@gmail.com"
    }
  ],
  "name": "react-native-image-crop-picker",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-native": ">=0.40.0"
  },
  "readme": "# react-native-image-crop-picker\niOS/Android image picker with support for camera, configurable compression, multiple images and cropping\n\n## Result\n\n<img width=200 title=\"iOS Single Pick\" src=\"https://github.com/ivpusic/react-native-image-crop-picker/blob/master/images/ios_single_pick.png\">\n<img width=200 title=\"iOS Crop\" src=\"https://github.com/ivpusic/react-native-image-crop-picker/blob/master/images/ios_crop.png\">\n<img width=200 title=\"iOS Multiple Pick\" src=\"https://github.com/ivpusic/react-native-image-crop-picker/blob/master/images/ios_multiple_pick.png\">\n\n## Usage\n\nImport library\n```javascript\nimport ImagePicker from 'react-native-image-crop-picker';\n```\n\n#### Select from gallery\n\nCall single image picker with cropping\n```javascript\nImagePicker.openPicker({\n  width: 300,\n  height: 400,\n  cropping: true\n}).then(image => {\n  console.log(image);\n});\n```\n\nCall multiple image picker\n```javascript\nImagePicker.openPicker({\n  multiple: true\n}).then(images => {\n  console.log(images);\n});\n```\n\n#### Select from camera\n```javascript\nImagePicker.openCamera({\n  width: 300,\n  height: 400,\n  cropping: true\n}).then(image => {\n  console.log(image);\n});\n```\n\n#### Crop picture\n```javascript\nImagePicker.openCropper({\n  path: 'my-file-path.jpg',\n  width: 300,\n  height: 400\n}).then(image => {\n  console.log(image);\n});\n```\n\n#### Optional cleanup\nModule is creating tmp images which are going to be cleaned up automatically somewhere in the future. If you want to force cleanup, you can use `clean` to clean all tmp files, or `cleanSingle(path)` to clean single tmp file.\n\n```javascript\nImagePicker.clean().then(() => {\n  console.log('removed all tmp images from tmp directory');\n}).catch(e => {\n  alert(e);\n});\n```\n\n#### Request Object\n\n| Property                                |                   Type                   | Description                              |\n| --------------------------------------- | :--------------------------------------: | :--------------------------------------- |\n| cropping                                |           bool (default false)           | Enable or disable cropping               |\n| width                                   |                  number                  | Width of result image when used with `cropping` option |\n| height                                  |                  number                  | Height of result image when used with `cropping` option |\n| multiple                                |           bool (default false)           | Enable or disable multiple image selection |\n| includeBase64                           |           bool (default false)           | Enable or disable returning base64 data with image |\n| cropperActiveWidgetColor (android only) |       string (default `\"#424242\"`)       | When cropping image, determines ActiveWidget color. |\n| cropperStatusBarColor (android only)    |        string (default `#424242`)        | When cropping image, determines the color of StatusBar. |\n| cropperToolbarColor (android only)      |        string (default `#424242`)        | When cropping image, determines the color of Toolbar. |\n| cropperCircleOverlay                    |           bool (default false)           | Enable or disable circular cropping mask. |\n| maxFiles (ios only)                     |            number (default 5)            | Max number of files to select when using `multiple` option |\n| waitAnimationEnd (ios only)             |           bool (default true)            | Promise will resolve/reject once ViewController `completion` block is called |\n| smartAlbums (ios only)                  | array (default ['UserLibrary', 'PhotoStream', 'Panoramas', 'Videos', 'Bursts']) | List of smart albums to choose from      |\n| useFrontCamera (ios only)               |           bool (default false)           | Whether to default to the front/'selfie' camera when opened |\n| compressVideoPreset (ios only)          |      string (default MediumQuality)      | Choose which preset will be used for video compression |\n| compressImageMaxWidth                   |          number (default none)           | Compress image with maximum width        |\n| compressImageMaxHeight                  |          number (default none)           | Compress image with maximum height       |\n| compressImageQuality                    |            number (default 1)            | Compress image with quality (from 0 to 1, where 1 is best quality) |\n| loadingLabelText (ios only)             | string (default \"Processing assets...\")  | Text displayed while photo is loading in picker |\n| mediaType                               |           string (default any)           | Accepted mediaType for image selection, can be one of: 'photo', 'video', or 'any' |\n| showsSelectedCount (ios only)           |           bool (default true)            | Whether to show the number of selected assets |\n| showCropGuidelines (android only)       |           bool (default true)            | Whether to show the 3x3 grid on top of the image during cropping |\n| hideBottomControls (android only)       |           bool (default false)           | Whether to display bottom controls       |\n| enableRotationGesture (android only)    |           bool (default false)           | Whether to enable rotating the image by hand gesture |\n#### Response Object\n\n| Property        |  Type  | Description                              |\n| --------------- | :----: | :--------------------------------------- |\n| path            | string | Selected image location                  |\n| localIdentifier | string | Selected images' localidentifier, used for PHAsset searching |\n| filename        | string | Selected images' filename                |\n| width           | number | Selected image width                     |\n| height          | number | Selected image height                    |\n| mime            | string | Selected image MIME type (image/jpeg, image/png) |\n| size            | number | Selected image size in bytes             |\n| data            | base64 | Optional base64 selected file representation |\n\n## Install\n\n```\nnpm i react-native-image-crop-picker --save\nreact-native link react-native-image-crop-picker\n```\n\n#### Post-install steps\n\n##### iOS\n\nIn Xcode open Info.plist and add string key `NSPhotoLibraryUsageDescription` with value that describes why do you need access to user photos. More info here https://forums.developer.apple.com/thread/62229. Depending on what features you use, you also may need `NSCameraUsageDescription` and `NSMicrophoneUsageDescription` keys.\n\n###### cocoapods users\n\n- Add `platform :ios, '8.0'` to Podfile (!important)\n- Add `pod 'RSKImageCropper'` and `pod 'QBImagePickerController'` to Podfile\n\n###### non-cocoapods users\n\n- Drag and drop the ios/ImageCropPickerSDK folder to your xcode project. (Make sure Copy items if needed IS ticked)\n- Click on project General tab\n  - Under `Deployment Info` set `Deployment Target` to `8.0`\n  - Under `Embedded Binaries` click `+` and add `RSKImageCropper.framework` and `QBImagePicker.framework`\n\n##### Android\n\n- Make sure you are using Gradle `2.2.x` (project build.gradle)\n```gradle\nbuildscript {\n    ...\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.3'\n        ...\n    }\n    ...\n}\n```\n\n- Add `useSupportLibrary` (app build.gradle)\n```gradle\nandroid {\n    ...\n\n    defaultConfig {\n        ...\n        vectorDrawables.useSupportLibrary = true\n        ...\n    }\n    ...\n}\n```\n\n- [Optional] If you want to use camera picker in your project, add following to `AndroidManifest.xml`\n  - `<uses-permission android:name=\"android.permission.CAMERA\"/>`\n\n#### Production build\n\n##### iOS\n\n###### cocoapods users\n\n- You are already done\n\n###### non-cocoapods users\n\nIf you are using pre-built frameworks from `ios/ImageCropPickerSDK`, then before deploying app to production you should strip off simulator ARCHs from these, or you can add frameworks from `Libraries/imageCropPicker/Libraries/_framework_name_.xcodeproj/Products/_framework_name_.framework` to Embedded Binaries instead of pre-built ones.\nRelated issue: https://github.com/ivpusic/react-native-image-crop-picker/issues/61.\n\nDetails for second approach:\n\n1. Remove the pre-built frameworks from `Embedded Binaries`\n2. Build for Device\n3. Add the newly built binaries for both frameworks to `Embedded Binaries` (located at `Libraries/imageCropPicker/Libraries/_framework_name_.xcodeproj/Products/_framework_name_.framework`)\n\n## License\n*MIT*\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ivpusic/react-native-image-crop-picker.git"
  },
  "scripts": {
    "prepublish": "rm -rf android/build",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.14.4"
}
